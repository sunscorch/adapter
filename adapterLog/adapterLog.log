[2024-06-14 19:27:44,567] [28596] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:27:44,568] [28596] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:27:44,568] [28596] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:27:44,696] [28596] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:27:44,758] [28596] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:30:27,407] [26848] [INFO] - modbusTest.py.<module> (modbusTest.py.bak:341) - start up the adapter...
[2024-06-14 19:30:27,407] [26848] [INFO] - modbusTest.py.main (modbusTest.py.bak:316) - C:\Users\95880\Desktop\adapter\modbusTest.py.bak
[2024-06-14 19:30:27,407] [26848] [INFO] - modbusTest.py.main (modbusTest.py.bak:317) - init
[2024-06-14 19:30:32,968] [24840] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:30:32,968] [24840] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:30:32,968] [24840] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:30:33,103] [24840] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:30:33,150] [24840] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:33:00,513] [30896] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:33:00,513] [30896] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:33:00,513] [30896] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:34:35,880] [13072] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:34:35,880] [13072] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:34:35,880] [13072] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:34:38,908] [13072] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 5， error:Modbus Error: [Input/Output] Modbus Error: [Invalid Message] No response received, expected at least 2 bytes (0 received)
[2024-06-14 19:34:41,942] [13072] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 5， error:Modbus Error: [Input/Output] No Response received from the remote unit/Unable to decode response
[2024-06-14 19:34:44,974] [13072] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 5， error:Modbus Error: [Input/Output] No Response received from the remote unit/Unable to decode response
[2024-06-14 19:34:48,007] [13072] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 5， error:Modbus Error: [Input/Output] No Response received from the remote unit/Unable to decode response
[2024-06-14 19:45:17,335] [2496] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:45:17,336] [2496] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:45:17,336] [2496] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:45:48,196] [2496] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 5， error:Modbus Error: [Input/Output] Modbus Error: [Invalid Message] No response received, expected at least 2 bytes (0 received)
[2024-06-14 19:45:51,241] [2496] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 5， error:Modbus Error: [Input/Output] No Response received from the remote unit/Unable to decode response
[2024-06-14 19:45:54,284] [2496] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 5， error:Modbus Error: [Input/Output] No Response received from the remote unit/Unable to decode response
[2024-06-14 19:45:57,325] [2496] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 5， error:Modbus Error: [Input/Output] No Response received from the remote unit/Unable to decode response
[2024-06-14 19:46:10,810] [13784] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:46:10,810] [13784] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:46:10,810] [13784] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:49:09,375] [17228] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:49:09,375] [17228] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:49:09,375] [17228] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:49:30,230] [17228] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 5， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:49:30,261] [17228] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 5， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:49:30,308] [17228] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 5， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:49:30,354] [17228] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 5， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:49:39,243] [18972] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:49:39,243] [18972] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:49:39,243] [18972] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:49:45,731] [26308] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:49:45,732] [26308] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:49:45,732] [26308] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:50:16,246] [908] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:50:16,246] [908] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:50:16,246] [908] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:53:27,534] [17380] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:53:27,534] [17380] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:53:27,534] [17380] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:53:27,620] [17380] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:53:27,666] [17380] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:53:27,712] [17380] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:55:22,504] [27700] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:55:22,504] [27700] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:55:22,504] [27700] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:55:22,593] [27700] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:55:22,640] [27700] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:55:22,686] [27700] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:57:05,890] [6128] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:57:05,890] [6128] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:57:05,890] [6128] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:57:05,981] [6128] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:57:06,027] [6128] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:57:06,072] [6128] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:57:26,065] [25860] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:57:26,065] [25860] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:57:26,065] [25860] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:57:26,160] [25860] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:57:26,223] [25860] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:57:26,269] [25860] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:57:58,108] [32332] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:57:58,108] [32332] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:57:58,108] [32332] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:58:02,780] [22160] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:58:02,780] [22160] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:58:02,780] [22160] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:58:02,864] [22160] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:58:02,910] [22160] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:58:02,957] [22160] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:59:31,244] [27712] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 19:59:31,244] [27712] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 19:59:31,244] [27712] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 19:59:31,321] [27712] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:59:31,368] [27712] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 19:59:31,415] [27712] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 20:02:16,007] [27348] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 20:02:16,007] [27348] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 20:02:16,007] [27348] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 20:02:16,092] [27348] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 20:02:16,139] [27348] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 20:02:16,186] [27348] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 37， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 20:03:43,128] [30204] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 20:03:43,129] [30204] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 20:03:43,129] [30204] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 20:04:16,062] [12912] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 20:04:16,062] [12912] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 20:04:16,062] [12912] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 20:04:19,170] [9232] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 20:04:19,170] [9232] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 20:04:19,170] [9232] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 20:04:19,308] [9232] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 20:04:19,370] [9232] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 22:07:59,067] [14396] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 22:07:59,067] [14396] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 22:07:59,067] [14396] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 22:07:59,200] [14396] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 22:07:59,246] [14396] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 22:08:24,209] [7748] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 22:08:24,209] [7748] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 22:08:24,209] [7748] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 22:08:24,357] [7748] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 22:08:24,404] [7748] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 22:11:04,943] [2232] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 22:11:04,943] [2232] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 22:11:04,943] [2232] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 22:11:05,095] [2232] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 22:11:05,141] [2232] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 22:14:01,094] [30984] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 22:14:01,094] [30984] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 22:14:01,094] [30984] [INFO] - modbusTest.main (modbusTest.py:396) - init
[2024-06-14 22:14:01,248] [30984] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 22:14:01,310] [30984] [ERROR] - modbusTest.probe (modbusTest.py:293) - fail to get gas original value from address 69， error:Exception Response(131, 3, IllegalAddress)
[2024-06-14 22:16:46,592] [25928] [INFO] - modbusTest.<module> (modbusTest.py:422) - start up the adapter...
[2024-06-14 22:16:46,592] [25928] [INFO] - modbusTest.main (modbusTest.py:395) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 22:16:46,592] [25928] [INFO] - modbusTest.main (modbusTest.py:396) - daemon
[2024-06-14 22:16:46,592] [25928] [INFO] - modbusTest.main (modbusTest.py:409) - we are in daemon mode
[2024-06-14 22:17:15,970] [25928] [INFO] - modbusTest.login (modbusTest.py:387) - login json is {'address': '2', 'userName': 'user', 'pwd': 'MTIz'}
[2024-06-14 22:17:15,970] [25928] [INFO] - modbusTest.login (modbusTest.py:388) - login request response is {
  "msg": "15BB8725BC3D4C18",
  "code": 1,
  "data": 30,
  "userName": null,
  "pwd": null,
  "key": null
}
[2024-06-14 22:17:17,983] [25928] [INFO] - modbusTest.heartbeat (modbusTest.py:370) - heartbeat request json is {'token': '15BB8725BC3D4C18'}
[2024-06-14 22:17:17,988] [25928] [INFO] - modbusTest.heartbeat (modbusTest.py:372) - heartbeat response is {
  "msg": "15BB8725BC3D4C18",
  "code": 1,
  "data": 30
}
[2024-06-14 22:17:17,988] [25928] [INFO] - modbusTest.heartbeat (modbusTest.py:379) - succeed to send heartbeat to server
[2024-06-14 22:26:45,643] [14332] [INFO] - modbusTest.<module> (modbusTest.py:420) - start up the adapter...
[2024-06-14 22:26:45,643] [14332] [INFO] - modbusTest.main (modbusTest.py:393) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 22:26:45,643] [14332] [INFO] - modbusTest.main (modbusTest.py:394) - daemon
[2024-06-14 22:26:45,643] [14332] [INFO] - modbusTest.main (modbusTest.py:407) - we are in daemon mode
[2024-06-14 22:27:10,960] [14332] [INFO] - modbusTest.login (modbusTest.py:385) - login json is {'address': '2', 'userName': 'user', 'pwd': 'MTIz'}
[2024-06-14 22:27:10,960] [14332] [INFO] - modbusTest.login (modbusTest.py:386) - login request response is {
  "msg": "C77F7DBA83B1FD28",
  "code": 1,
  "data": 30,
  "userName": null,
  "pwd": null,
  "key": null
}
[2024-06-14 22:27:12,966] [14332] [INFO] - modbusTest.heartbeat (modbusTest.py:368) - heartbeat request json is {'token': 'C77F7DBA83B1FD28'}
[2024-06-14 22:27:12,968] [14332] [INFO] - modbusTest.heartbeat (modbusTest.py:370) - heartbeat response is {
  "msg": "C77F7DBA83B1FD28",
  "code": 1,
  "data": 30
}
[2024-06-14 22:27:12,968] [14332] [INFO] - modbusTest.heartbeat (modbusTest.py:377) - succeed to send heartbeat to server
[2024-06-14 22:29:49,332] [17944] [INFO] - modbusTest.<module> (modbusTest.py:421) - start up the adapter...
[2024-06-14 22:29:49,332] [17944] [INFO] - modbusTest.main (modbusTest.py:394) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 22:29:49,332] [17944] [INFO] - modbusTest.main (modbusTest.py:395) - daemon
[2024-06-14 22:29:49,332] [17944] [INFO] - modbusTest.main (modbusTest.py:408) - we are in daemon mode
[2024-06-14 22:30:14,635] [17944] [INFO] - modbusTest.login (modbusTest.py:386) - login json is {'address': '2', 'userName': 'user', 'pwd': 'MTIz'}
[2024-06-14 22:30:14,635] [17944] [INFO] - modbusTest.login (modbusTest.py:387) - login request response is {
  "msg": "091516A7E96AD7D6",
  "code": 1,
  "data": 30,
  "userName": null,
  "pwd": null,
  "key": null
}
[2024-06-14 22:30:16,642] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '091516A7E96AD7D6'}
[2024-06-14 22:30:16,644] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "091516A7E96AD7D6",
  "code": 1,
  "data": 30
}
[2024-06-14 22:30:16,644] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:30:19,677] [17944] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel)
TypeError: get_cv_each_addr() missing 1 required positional argument: 'slave_id'
[2024-06-14 22:30:19,677] [17944] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel)
TypeError: get_cv_each_addr() missing 1 required positional argument: 'slave_id'
[2024-06-14 22:30:19,677] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:30:19,677] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:30:19,677] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:30:19,683] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:30:19,683] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:30:19,685] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:30:43,920] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '091516A7E96AD7D6'}
[2024-06-14 22:30:43,922] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "091516A7E96AD7D6",
  "code": 1,
  "data": 30
}
[2024-06-14 22:30:43,922] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:30:49,978] [17944] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel)
TypeError: get_cv_each_addr() missing 1 required positional argument: 'slave_id'
[2024-06-14 22:30:49,978] [17944] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel)
TypeError: get_cv_each_addr() missing 1 required positional argument: 'slave_id'
[2024-06-14 22:30:49,978] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:30:49,978] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:30:49,978] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:30:49,980] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:30:49,980] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:30:49,982] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:31:11,203] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '091516A7E96AD7D6'}
[2024-06-14 22:31:11,205] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "091516A7E96AD7D6",
  "code": 1,
  "data": 30
}
[2024-06-14 22:31:11,205] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:31:20,309] [17944] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel)
TypeError: get_cv_each_addr() missing 1 required positional argument: 'slave_id'
[2024-06-14 22:31:20,309] [17944] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel)
TypeError: get_cv_each_addr() missing 1 required positional argument: 'slave_id'
[2024-06-14 22:31:20,309] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:31:20,309] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:31:20,309] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:31:20,311] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:31:20,311] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:31:20,312] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:31:38,510] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '091516A7E96AD7D6'}
[2024-06-14 22:31:38,512] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "091516A7E96AD7D6",
  "code": 1,
  "data": 30
}
[2024-06-14 22:31:38,512] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:31:50,657] [17944] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel)
TypeError: get_cv_each_addr() missing 1 required positional argument: 'slave_id'
[2024-06-14 22:31:50,657] [17944] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel)
TypeError: get_cv_each_addr() missing 1 required positional argument: 'slave_id'
[2024-06-14 22:31:50,657] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:31:50,657] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:31:50,657] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:31:50,659] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:31:50,659] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:31:50,660] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:32:05,803] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '091516A7E96AD7D6'}
[2024-06-14 22:32:05,805] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "091516A7E96AD7D6",
  "code": 1,
  "data": 30
}
[2024-06-14 22:32:05,805] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:32:20,977] [17944] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel)
TypeError: get_cv_each_addr() missing 1 required positional argument: 'slave_id'
[2024-06-14 22:32:20,977] [17944] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel)
TypeError: get_cv_each_addr() missing 1 required positional argument: 'slave_id'
[2024-06-14 22:32:20,977] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:32:20,977] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:32:20,977] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:32:20,979] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:32:20,979] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:32:20,980] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:32:33,112] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '091516A7E96AD7D6'}
[2024-06-14 22:32:33,114] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "091516A7E96AD7D6",
  "code": 1,
  "data": 30
}
[2024-06-14 22:32:33,114] [17944] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:32:51,317] [17944] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel)
TypeError: get_cv_each_addr() missing 1 required positional argument: 'slave_id'
[2024-06-14 22:32:51,317] [17944] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel)
TypeError: get_cv_each_addr() missing 1 required positional argument: 'slave_id'
[2024-06-14 22:32:51,317] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:32:51,317] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:32:51,317] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:32:51,319] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:32:51,319] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:32:51,320] [17944] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:38:08,876] [32076] [INFO] - modbusTest.<module> (modbusTest.py:421) - start up the adapter...
[2024-06-14 22:38:08,876] [32076] [INFO] - modbusTest.main (modbusTest.py:394) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 22:38:08,876] [32076] [INFO] - modbusTest.main (modbusTest.py:395) - daemon
[2024-06-14 22:38:08,876] [32076] [INFO] - modbusTest.main (modbusTest.py:408) - we are in daemon mode
[2024-06-14 22:38:34,168] [32076] [INFO] - modbusTest.login (modbusTest.py:386) - login json is {'address': '2', 'userName': 'user', 'pwd': 'MTIz'}
[2024-06-14 22:38:34,168] [32076] [INFO] - modbusTest.login (modbusTest.py:387) - login request response is {
  "msg": "52C27D20EF485C73",
  "code": 1,
  "data": 30,
  "userName": null,
  "pwd": null,
  "key": null
}
[2024-06-14 22:38:36,174] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '52C27D20EF485C73'}
[2024-06-14 22:38:36,176] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "52C27D20EF485C73",
  "code": 1,
  "data": 30
}
[2024-06-14 22:38:36,176] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:38:39,214] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:38:39,235] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:38:39,235] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:38:39,235] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:38:39,235] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:38:39,237] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:38:39,237] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:38:39,239] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:39:03,492] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '52C27D20EF485C73'}
[2024-06-14 22:39:03,495] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "52C27D20EF485C73",
  "code": 1,
  "data": 30
}
[2024-06-14 22:39:03,495] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:39:09,565] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:39:09,565] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:39:09,565] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:39:09,565] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:39:09,565] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:39:09,567] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:39:09,567] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:39:09,568] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:39:30,818] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '52C27D20EF485C73'}
[2024-06-14 22:39:30,820] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "52C27D20EF485C73",
  "code": 1,
  "data": 30
}
[2024-06-14 22:39:30,820] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:39:39,927] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:39:39,927] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:39:39,927] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:39:39,927] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:39:39,927] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:39:39,929] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:39:39,929] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:39:39,931] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:39:58,103] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '52C27D20EF485C73'}
[2024-06-14 22:39:58,135] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "52C27D20EF485C73",
  "code": 1,
  "data": 30
}
[2024-06-14 22:39:58,135] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:40:10,274] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:40:10,274] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:40:10,274] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:40:10,274] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:40:10,274] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:40:10,276] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:40:10,276] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:40:10,277] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:40:25,434] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '52C27D20EF485C73'}
[2024-06-14 22:40:25,445] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "52C27D20EF485C73",
  "code": 1,
  "data": 30
}
[2024-06-14 22:40:25,445] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:40:40,616] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:40:40,616] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:40:40,616] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:40:40,616] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:40:40,616] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:40:40,618] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:40:40,618] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:40:40,620] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:40:52,749] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '52C27D20EF485C73'}
[2024-06-14 22:40:52,751] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "52C27D20EF485C73",
  "code": 1,
  "data": 30
}
[2024-06-14 22:40:52,751] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:41:10,971] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:41:10,971] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:41:10,971] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:41:10,971] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:41:10,971] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:41:11,001] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:41:11,001] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:41:11,003] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:41:20,100] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '52C27D20EF485C73'}
[2024-06-14 22:41:20,102] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "52C27D20EF485C73",
  "code": 1,
  "data": 30
}
[2024-06-14 22:41:20,102] [32076] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:41:41,319] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 5
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:41:41,319] [32076] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel,get_cv_each_addr)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 220, in get_cv_each_addr
    res = client.read_holding_registers(address=address, count=12, unit=slave_id)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\common.py", line 114, in read_holding_registers
    return self.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\client\sync.py", line 109, in execute
    return self.transaction.execute(request)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 174, in execute
    response, last_exception = self._transact(
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\transaction.py", line 270, in _transact
    packet = self.client.framer.buildPacket(packet)
  File "D:\flask-hello-world-master\venv\lib\site-packages\pymodbus\framer\rtu_framer.py", line 249, in buildPacket
    packet = struct.pack(RTU_FRAME_HEADER,
struct.error: required argument is not an integer
[2024-06-14 22:41:41,319] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is 
[2024-06-14 22:41:41,319] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is []
[2024-06-14 22:41:41,319] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is []
[2024-06-14 22:41:41,321] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:41:41,321] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is []
[2024-06-14 22:41:41,322] [32076] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:42:45,036] [27968] [INFO] - modbusTest.<module> (modbusTest.py:421) - start up the adapter...
[2024-06-14 22:42:45,036] [27968] [INFO] - modbusTest.main (modbusTest.py:394) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 22:42:45,036] [27968] [INFO] - modbusTest.main (modbusTest.py:395) - daemon
[2024-06-14 22:42:45,036] [27968] [INFO] - modbusTest.main (modbusTest.py:408) - we are in daemon mode
[2024-06-14 22:43:35,931] [16748] [INFO] - modbusTest.<module> (modbusTest.py:421) - start up the adapter...
[2024-06-14 22:43:35,931] [16748] [INFO] - modbusTest.main (modbusTest.py:394) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 22:43:35,931] [16748] [INFO] - modbusTest.main (modbusTest.py:395) - daemon
[2024-06-14 22:43:35,932] [16748] [INFO] - modbusTest.main (modbusTest.py:408) - we are in daemon mode
[2024-06-14 22:43:41,035] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:43:41,035] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:43:41,035] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:43:41,097] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:43:41,097] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:43:41,097] [16748] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:43:41,097] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:43:41,097] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000021A9033D190>]
[2024-06-14 22:43:41,097] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376221035}]
[2024-06-14 22:43:41,107] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:43:41,107] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376221035, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:43:41,113] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:43:46,214] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:43:46,214] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:43:46,214] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:43:46,260] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:43:46,260] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:43:46,260] [16748] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:43:46,260] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:43:46,260] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000021A9033D0A0>]
[2024-06-14 22:43:46,260] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376226215}]
[2024-06-14 22:43:46,262] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:43:46,263] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376226215, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:43:46,265] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:43:51,376] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:43:51,376] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:43:51,376] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:43:51,423] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:43:51,423] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:43:51,423] [16748] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:43:51,423] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:43:51,423] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000021A9033DC40>]
[2024-06-14 22:43:51,423] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376231376}]
[2024-06-14 22:43:51,425] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:43:51,425] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376231376, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:43:51,427] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:43:56,523] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:43:56,523] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:43:56,523] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:43:56,587] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:43:56,587] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:43:56,587] [16748] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:43:56,587] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:43:56,587] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000021A9033D3A0>]
[2024-06-14 22:43:56,587] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376236524}]
[2024-06-14 22:43:56,589] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:43:56,589] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376236524, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:43:56,593] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:44:01,643] [16748] [INFO] - modbusTest.login (modbusTest.py:386) - login json is {'address': '2', 'userName': 'user', 'pwd': 'MTIz'}
[2024-06-14 22:44:01,643] [16748] [INFO] - modbusTest.login (modbusTest.py:387) - login request response is {
  "msg": "DF38C193B5BCA151",
  "code": 1,
  "data": 30,
  "userName": null,
  "pwd": null,
  "key": null
}
[2024-06-14 22:44:03,652] [16748] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': 'DF38C193B5BCA151'}
[2024-06-14 22:44:03,654] [16748] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "DF38C193B5BCA151",
  "code": 1,
  "data": 30
}
[2024-06-14 22:44:03,654] [16748] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:44:03,698] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:44:03,698] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:44:03,698] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:44:03,745] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:44:03,745] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:44:03,745] [16748] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:44:03,745] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:44:03,745] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000021A9033D070>]
[2024-06-14 22:44:03,745] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376243699}]
[2024-06-14 22:44:03,747] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:44:03,748] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376243699, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:44:03,749] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:44:08,846] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:44:08,846] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:44:08,847] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:44:08,909] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:44:08,909] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:44:08,909] [16748] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:44:08,909] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:44:08,909] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000021A9033D910>]
[2024-06-14 22:44:08,909] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376248847}]
[2024-06-14 22:44:08,911] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:44:08,911] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376248846, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:44:08,913] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:44:14,013] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:44:14,013] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:44:14,013] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:44:14,060] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:44:14,060] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:44:14,060] [16748] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:44:14,060] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:44:14,060] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000021A9033D250>]
[2024-06-14 22:44:14,060] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376254013}]
[2024-06-14 22:44:14,063] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:44:14,064] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376254013, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:44:14,065] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:44:19,168] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:44:19,168] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:44:19,168] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:44:19,214] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:44:19,214] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:44:19,214] [16748] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:44:19,214] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:44:19,214] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000021A9033D3A0>]
[2024-06-14 22:44:19,214] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376259168}]
[2024-06-14 22:44:19,216] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:44:19,216] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376259168, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:44:19,218] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:44:24,305] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:44:24,305] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:44:24,305] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:44:24,352] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:44:24,352] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:44:24,352] [16748] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:44:24,352] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:44:24,352] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000021A9033D8E0>]
[2024-06-14 22:44:24,352] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376264306}]
[2024-06-14 22:44:24,355] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:44:24,356] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376264306, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:44:24,357] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:44:31,425] [16748] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': 'DF38C193B5BCA151'}
[2024-06-14 22:44:31,427] [16748] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "DF38C193B5BCA151",
  "code": 1,
  "data": 30
}
[2024-06-14 22:44:31,427] [16748] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:44:31,472] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:44:31,472] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:44:31,472] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:44:31,535] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:44:31,535] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:44:31,535] [16748] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:44:31,535] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:44:31,535] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000021A9033D850>]
[2024-06-14 22:44:31,535] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376271473}]
[2024-06-14 22:44:31,537] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:44:31,537] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376271473, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:44:31,539] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:44:36,641] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:44:36,641] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:44:36,641] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:44:36,688] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:44:36,688] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:44:36,688] [16748] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:44:36,688] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:44:36,688] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000021A9033D8B0>]
[2024-06-14 22:44:36,688] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376276642}]
[2024-06-14 22:44:36,694] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:44:36,694] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376276642, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:44:36,696] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:44:41,800] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:44:41,800] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:44:41,800] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:44:41,846] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:44:41,846] [16748] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:44:41,846] [16748] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:\Users\95880\Desktop\adapter\modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:44:41,846] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:44:41,846] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000021A9033D6D0>]
[2024-06-14 22:44:41,846] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376281801}]
[2024-06-14 22:44:41,848] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:44:41,849] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376281801, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:44:41,850] [16748] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:45:50,278] [6232] [INFO] - modbusTest.<module> (modbusTest.py:421) - start up the adapter...
[2024-06-14 22:45:50,278] [6232] [INFO] - modbusTest.main (modbusTest.py:394) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 22:45:50,278] [6232] [INFO] - modbusTest.main (modbusTest.py:395) - daemon
[2024-06-14 22:45:50,278] [6232] [INFO] - modbusTest.main (modbusTest.py:408) - we are in daemon mode
[2024-06-14 22:46:05,428] [6232] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:46:05,428] [6232] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:46:26,229] [6232] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:47:14,540] [6232] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:47:14,540] [6232] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:48:52,193] [6128] [INFO] - modbusTest.<module> (modbusTest.py:421) - start up the adapter...
[2024-06-14 22:48:52,193] [6128] [INFO] - modbusTest.main (modbusTest.py:394) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 22:48:52,193] [6128] [INFO] - modbusTest.main (modbusTest.py:395) - daemon
[2024-06-14 22:48:52,193] [6128] [INFO] - modbusTest.main (modbusTest.py:408) - we are in daemon mode
[2024-06-14 22:48:57,273] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:48:57,273] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:49:02,989] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:49:03,035] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:49:03,035] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:49:03,035] [6128] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:49:03,036] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:49:03,036] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000023BD4BD0460>]
[2024-06-14 22:49:03,036] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376542989}]
[2024-06-14 22:49:03,043] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:49:03,043] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376541520, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:49:03,047] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:49:08,139] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:49:08,139] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:49:08,140] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:49:08,202] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:49:08,202] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:49:08,202] [6128] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:49:08,202] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:49:08,202] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000023BD4BAFFD0>]
[2024-06-14 22:49:08,202] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376548140}]
[2024-06-14 22:49:08,206] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:49:08,207] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376548139, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:49:08,209] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:49:13,308] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:49:13,308] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:49:13,308] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:49:13,354] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:49:13,354] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:49:13,354] [6128] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:49:13,354] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:49:13,354] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000023BD4BD0820>]
[2024-06-14 22:49:13,355] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376553308}]
[2024-06-14 22:49:13,358] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:49:13,358] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376553308, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:49:13,361] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:49:17,418] [6128] [INFO] - modbusTest.login (modbusTest.py:386) - login json is {'address': '2', 'userName': 'user', 'pwd': 'MTIz'}
[2024-06-14 22:49:17,418] [6128] [INFO] - modbusTest.login (modbusTest.py:387) - login request response is {
  "msg": "530305E640929E78",
  "code": 1,
  "data": 30,
  "userName": null,
  "pwd": null,
  "key": null
}
[2024-06-14 22:49:19,425] [6128] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '530305E640929E78'}
[2024-06-14 22:49:19,428] [6128] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "530305E640929E78",
  "code": 1,
  "data": 30
}
[2024-06-14 22:49:19,428] [6128] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:49:20,485] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:49:20,485] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:49:20,485] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:49:20,547] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:49:20,547] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:49:20,547] [6128] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:49:20,547] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:49:20,547] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000023BD4BAFEB0>]
[2024-06-14 22:49:20,547] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376560485}]
[2024-06-14 22:49:20,550] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:49:20,550] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376560485, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:49:20,553] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:49:25,648] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:49:25,648] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:49:25,648] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:49:25,711] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:49:25,711] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:49:25,711] [6128] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:49:25,711] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:49:25,711] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000023BD4BD08E0>]
[2024-06-14 22:49:25,711] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376565648}]
[2024-06-14 22:49:25,714] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:49:25,715] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376565648, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:49:25,717] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:49:30,812] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:49:30,812] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:49:30,812] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:49:30,860] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:49:30,860] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:49:30,860] [6128] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:49:30,860] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:49:30,860] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000023BD483DB80>]
[2024-06-14 22:49:30,860] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376570813}]
[2024-06-14 22:49:30,863] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:49:30,864] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376570813, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:49:30,866] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:49:35,973] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:49:35,973] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:49:35,973] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:49:36,036] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:49:36,037] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:49:36,037] [6128] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:49:36,037] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:49:36,037] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000023BD4BD04F0>]
[2024-06-14 22:49:36,037] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376575974}]
[2024-06-14 22:49:36,041] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:49:36,041] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376575974, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:49:36,044] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:49:41,147] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:49:41,147] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:49:41,147] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:49:41,209] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:49:41,209] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:49:41,209] [6128] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 22:49:41,209] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0]
[2024-06-14 22:49:41,209] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000023BD484E2B0>]
[2024-06-14 22:49:41,209] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718376581148}]
[2024-06-14 22:49:41,213] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 22:49:41,213] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718376581148, 'objectId': {'slave_id': 1, 'channel': 2, 'objid': 10002}, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 22:49:41,216] [6128] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 22:49:47,266] [6128] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '530305E640929E78'}
[2024-06-14 22:49:47,269] [6128] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "530305E640929E78",
  "code": 1,
  "data": 30
}
[2024-06-14 22:49:47,269] [6128] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 22:50:00,694] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 22:50:00,694] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 22:50:00,695] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 22:50:46,314] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 22:51:22,200] [6128] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 22:52:06,471] [6128] [ERROR] - modbusTest.collect_modbus_data (modbusTest.py:320) - Failed to get cv data at address 37
Traceback (most recent call last):
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 318, in collect_modbus_data
    cv = get_cv_each_addr(start_addr_cur, channel, slave_id)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 244, in get_cv_each_addr
    peocess_alarm(channel, alarm_status, cv, low_warning_threshold, high_warning_threshold, gas_name)
  File "C:/Users/95880/Desktop/adapter/modbusTest.py", line 200, in peocess_alarm
    objid = conf_mp[channel]
IndexError: list index out of range
[2024-06-14 23:01:40,543] [31188] [INFO] - modbusTest.<module> (modbusTest.py:421) - start up the adapter...
[2024-06-14 23:01:40,543] [31188] [INFO] - modbusTest.main (modbusTest.py:394) - C:/Users/95880/Desktop/adapter/modbusTest.py
[2024-06-14 23:01:40,543] [31188] [INFO] - modbusTest.main (modbusTest.py:395) - daemon
[2024-06-14 23:01:40,543] [31188] [INFO] - modbusTest.main (modbusTest.py:408) - we are in daemon mode
[2024-06-14 23:01:45,657] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:01:45,657] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:01:45,657] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:01:45,720] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:01:45,720] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:01:45,720] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:01:45,720] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:01:45,720] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D1C0>]
[2024-06-14 23:01:45,720] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377305658}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377305721}]
[2024-06-14 23:01:45,724] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:01:45,724] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377305658, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:01:45,731] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:01:50,830] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:01:50,830] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:01:50,830] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:01:50,876] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:01:50,876] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:01:50,876] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:01:50,876] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:01:50,876] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D0D0>]
[2024-06-14 23:01:50,876] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377310830}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377310876}]
[2024-06-14 23:01:50,878] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:01:50,879] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377310830, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:01:50,881] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:01:55,987] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:01:55,987] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:01:55,987] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:01:56,035] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:01:56,035] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:01:56,035] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:01:56,035] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:01:56,035] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45DCA0>]
[2024-06-14 23:01:56,035] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377315988}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377316035}]
[2024-06-14 23:01:56,037] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:01:56,037] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377315988, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:01:56,040] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:02:01,135] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:02:01,135] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:02:01,135] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:02:01,183] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:02:01,183] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:02:01,183] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:02:01,183] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:02:01,183] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D430>]
[2024-06-14 23:02:01,183] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377321135}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377321183}]
[2024-06-14 23:02:01,185] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:02:01,185] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377321135, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:02:01,189] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:02:06,253] [31188] [INFO] - modbusTest.login (modbusTest.py:386) - login json is {'address': '2', 'userName': 'user', 'pwd': 'MTIz'}
[2024-06-14 23:02:06,253] [31188] [INFO] - modbusTest.login (modbusTest.py:387) - login request response is {
  "msg": "4E0A95F9FAC5B758",
  "code": 1,
  "data": 30,
  "userName": null,
  "pwd": null,
  "key": null
}
[2024-06-14 23:02:08,263] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '4E0A95F9FAC5B758'}
[2024-06-14 23:02:08,265] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "4E0A95F9FAC5B758",
  "code": 1,
  "data": 30
}
[2024-06-14 23:02:08,265] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 23:02:08,310] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:02:08,310] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:02:08,310] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:02:08,357] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:02:08,357] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:02:08,357] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:02:08,357] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:02:08,357] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D040>]
[2024-06-14 23:02:08,357] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377328311}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377328357}]
[2024-06-14 23:02:08,360] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:02:08,360] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377328311, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:02:08,362] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:02:13,465] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:02:13,465] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:02:13,465] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:02:13,512] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:02:13,512] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:02:13,512] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:02:13,512] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:02:13,512] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D760>]
[2024-06-14 23:02:13,512] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377333466}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377333513}]
[2024-06-14 23:02:13,514] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:02:13,514] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377333466, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:02:13,517] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:02:18,612] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:02:18,612] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:02:18,612] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:02:18,658] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:02:18,658] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:02:18,658] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:02:18,659] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:02:18,659] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D3A0>]
[2024-06-14 23:02:18,659] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377338612}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377338659}]
[2024-06-14 23:02:18,661] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:02:18,661] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377338612, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:02:18,663] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:02:23,761] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:02:23,761] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:02:23,761] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:02:23,807] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:02:23,807] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:02:23,807] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:02:23,807] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:02:23,807] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D640>]
[2024-06-14 23:02:23,807] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377343761}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377343807}]
[2024-06-14 23:02:23,809] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:02:23,809] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377343761, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:02:23,812] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:02:28,914] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:02:28,914] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:02:28,914] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:02:28,978] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:02:28,978] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:02:28,978] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:02:28,978] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:02:28,978] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D370>]
[2024-06-14 23:02:28,978] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377348915}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377348978}]
[2024-06-14 23:02:28,980] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:02:28,980] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377348915, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:02:28,983] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:02:36,055] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '4E0A95F9FAC5B758'}
[2024-06-14 23:02:36,057] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "4E0A95F9FAC5B758",
  "code": 1,
  "data": 30
}
[2024-06-14 23:02:36,057] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 23:02:36,101] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:02:36,101] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:02:36,101] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:02:36,148] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:02:36,148] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:02:36,148] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:02:36,148] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:02:36,148] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D8B0>]
[2024-06-14 23:02:36,148] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377356101}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377356149}]
[2024-06-14 23:02:36,150] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:02:36,150] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377356101, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:02:36,153] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:02:41,250] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:02:41,250] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:02:41,250] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:02:41,313] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:02:41,313] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:02:41,313] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:02:41,313] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:02:41,313] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D730>]
[2024-06-14 23:02:41,313] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377361250}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377361313}]
[2024-06-14 23:02:41,315] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:02:41,315] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377361250, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:02:41,318] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:02:46,406] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:02:46,406] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:02:46,406] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:02:46,469] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:02:46,469] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:02:46,469] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:02:46,469] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:02:46,469] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D790>]
[2024-06-14 23:02:46,469] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377366407}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377366469}]
[2024-06-14 23:02:46,471] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:02:46,471] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377366407, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:02:46,473] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:02:51,582] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:02:51,582] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:02:51,582] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:02:51,630] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:02:51,630] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:02:51,630] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:02:51,630] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:02:51,630] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D6A0>]
[2024-06-14 23:02:51,630] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377371582}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377371630}]
[2024-06-14 23:02:51,632] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:02:51,632] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377371582, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:02:51,634] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:02:56,735] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:02:56,735] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:02:56,735] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:02:56,782] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:02:56,782] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:02:56,782] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:02:56,782] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:02:56,782] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D610>]
[2024-06-14 23:02:56,782] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377376736}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377376782}]
[2024-06-14 23:02:56,784] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:02:56,784] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377376736, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:02:56,788] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:03:03,853] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '4E0A95F9FAC5B758'}
[2024-06-14 23:03:03,855] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "4E0A95F9FAC5B758",
  "code": 1,
  "data": 30
}
[2024-06-14 23:03:03,855] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 23:03:03,900] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:03:03,900] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:03:03,900] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:03:03,946] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:03:03,946] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:03:03,946] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:03:03,946] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:03:03,946] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D580>]
[2024-06-14 23:03:03,946] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377383901}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377383947}]
[2024-06-14 23:03:03,948] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:03:03,948] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377383901, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:03:03,950] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:03:09,030] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:03:09,030] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:03:09,030] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:03:09,076] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:03:09,076] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:03:09,076] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:03:09,076] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:03:09,076] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D910>]
[2024-06-14 23:03:09,076] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377389030}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377389077}]
[2024-06-14 23:03:09,078] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:03:09,079] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377389030, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:03:09,081] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:03:14,163] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:03:14,163] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:03:14,163] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:03:14,210] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:03:14,210] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:03:14,210] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:03:14,210] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:03:14,210] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45DC70>]
[2024-06-14 23:03:14,210] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377394163}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377394210}]
[2024-06-14 23:03:14,212] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:03:14,212] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377394163, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:03:14,215] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:03:19,295] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:03:19,295] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:03:19,295] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:03:19,358] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:03:19,358] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:03:19,358] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:03:19,358] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:03:19,358] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45DC10>]
[2024-06-14 23:03:19,358] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377399296}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377399358}]
[2024-06-14 23:03:19,360] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:03:19,360] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377399296, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:03:19,363] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:03:24,454] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:03:24,454] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:03:24,454] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:03:24,516] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:03:24,516] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:03:24,516] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:03:24,516] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:03:24,516] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D7F0>]
[2024-06-14 23:03:24,516] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377404454}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377404517}]
[2024-06-14 23:03:24,518] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:03:24,518] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377404454, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:03:24,521] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:03:31,582] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '4E0A95F9FAC5B758'}
[2024-06-14 23:03:31,584] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "4E0A95F9FAC5B758",
  "code": 1,
  "data": 30
}
[2024-06-14 23:03:31,584] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 23:03:31,629] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:03:31,629] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:03:31,629] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:03:31,691] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:03:31,691] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:03:31,691] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:03:31,691] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:03:31,691] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D520>]
[2024-06-14 23:03:31,691] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377411629}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377411692}]
[2024-06-14 23:03:31,694] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:03:31,694] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377411629, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:03:31,697] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:03:36,795] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:03:36,795] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:03:36,795] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:03:36,841] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:03:36,841] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:03:36,841] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:03:36,841] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:03:36,841] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D130>]
[2024-06-14 23:03:36,841] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377416795}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377416841}]
[2024-06-14 23:03:36,843] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:03:36,843] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377416795, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:03:36,846] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:03:41,957] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:03:41,957] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:03:41,957] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:03:42,005] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:03:42,005] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:03:42,005] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:03:42,005] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:03:42,005] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45DBE0>]
[2024-06-14 23:03:42,005] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377421958}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377422005}]
[2024-06-14 23:03:42,007] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:03:42,007] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377421958, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:03:42,009] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:03:47,103] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:03:47,103] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:03:47,103] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:03:47,165] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:03:47,165] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:03:47,165] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:03:47,165] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:03:47,165] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D370>]
[2024-06-14 23:03:47,165] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377427104}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377427166}]
[2024-06-14 23:03:47,167] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:03:47,167] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377427104, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:03:47,169] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:03:52,278] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:03:52,278] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:03:52,279] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:03:52,325] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:03:52,325] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:03:52,325] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:03:52,325] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:03:52,325] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D5B0>]
[2024-06-14 23:03:52,325] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377432279}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377432325}]
[2024-06-14 23:03:52,327] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:03:52,327] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377432279, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:03:52,329] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:03:59,388] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '4E0A95F9FAC5B758'}
[2024-06-14 23:03:59,390] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "4E0A95F9FAC5B758",
  "code": 1,
  "data": 30
}
[2024-06-14 23:03:59,390] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 23:03:59,434] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:03:59,434] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:03:59,434] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:03:59,497] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:03:59,497] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:03:59,497] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:03:59,497] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:03:59,497] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45DC40>]
[2024-06-14 23:03:59,497] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377439435}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377439497}]
[2024-06-14 23:03:59,500] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:03:59,500] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377439435, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:03:59,503] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:04:04,599] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:04:04,599] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:04:04,599] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:04:04,661] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:04:04,661] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:04:04,661] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:04:04,661] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:04:04,661] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D940>]
[2024-06-14 23:04:04,661] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377444599}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377444661}]
[2024-06-14 23:04:04,664] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:04:04,664] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377444599, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:04:04,666] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:04:09,763] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:04:09,763] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:04:09,763] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:04:09,810] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:04:09,810] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:04:09,810] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:04:09,810] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:04:09,810] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D2E0>]
[2024-06-14 23:04:09,810] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377449764}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377449810}]
[2024-06-14 23:04:09,812] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:04:09,812] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377449764, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:04:09,814] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:04:14,893] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:04:14,893] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:04:14,893] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:04:14,955] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:04:14,955] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:04:14,955] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:04:14,955] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:04:14,955] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D610>]
[2024-06-14 23:04:14,955] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377454893}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377454955}]
[2024-06-14 23:04:14,957] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:04:14,957] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377454893, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:04:14,960] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:04:20,057] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:04:20,057] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:04:20,057] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:04:20,103] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:04:20,103] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:04:20,103] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:04:20,103] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:04:20,103] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D700>]
[2024-06-14 23:04:20,103] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377460057}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377460104}]
[2024-06-14 23:04:20,105] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:04:20,105] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377460057, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:04:20,107] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:04:27,170] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '4E0A95F9FAC5B758'}
[2024-06-14 23:04:27,172] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "4E0A95F9FAC5B758",
  "code": 1,
  "data": 30
}
[2024-06-14 23:04:27,172] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 23:04:27,217] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:04:27,217] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:04:27,217] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:04:27,263] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:04:27,263] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:04:27,263] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:04:27,263] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:04:27,263] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D880>]
[2024-06-14 23:04:27,263] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377467218}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377467264}]
[2024-06-14 23:04:27,265] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:04:27,265] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377467218, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:04:27,267] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:04:32,359] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:04:32,359] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:04:32,359] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:04:32,405] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:04:32,405] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:04:32,405] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:04:32,405] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:04:32,405] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D040>]
[2024-06-14 23:04:32,405] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377472360}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377472406}]
[2024-06-14 23:04:32,407] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:04:32,407] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377472360, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:04:32,409] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:04:37,498] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:04:37,498] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:04:37,499] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:04:37,560] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:04:37,560] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:04:37,560] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:04:37,560] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:04:37,560] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D3D0>]
[2024-06-14 23:04:37,560] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377477499}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377477560}]
[2024-06-14 23:04:37,563] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:04:37,563] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377477499, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:04:37,568] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:04:42,660] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:04:42,660] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:04:42,660] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:04:42,706] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:04:42,706] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:04:42,706] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:04:42,706] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:04:42,706] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D7F0>]
[2024-06-14 23:04:42,706] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377482660}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377482707}]
[2024-06-14 23:04:42,708] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:04:42,708] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377482660, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:04:42,710] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:04:47,801] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:04:47,801] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:04:47,801] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:04:47,846] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:04:47,846] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:04:47,846] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:04:47,846] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:04:47,846] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D5E0>]
[2024-06-14 23:04:47,846] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377487801}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377487846}]
[2024-06-14 23:04:47,848] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:04:47,848] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377487801, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:04:47,850] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:04:54,918] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:369) - heartbeat request json is {'token': '4E0A95F9FAC5B758'}
[2024-06-14 23:04:54,920] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:371) - heartbeat response is {
  "msg": "4E0A95F9FAC5B758",
  "code": 1,
  "data": 30
}
[2024-06-14 23:04:54,920] [31188] [INFO] - modbusTest.heartbeat (modbusTest.py:378) - succeed to send heartbeat to server
[2024-06-14 23:04:54,966] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:04:54,966] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:04:54,966] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:04:55,029] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:04:55,029] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:04:55,029] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:04:55,029] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:04:55,029] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D3A0>]
[2024-06-14 23:04:55,029] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377494966}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377495029}]
[2024-06-14 23:04:55,031] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:04:55,031] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377494966, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:04:55,046] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:05:00,155] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:05:00,155] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:05:00,155] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:05:00,201] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:05:00,201] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:05:00,201] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:05:00,201] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:05:00,201] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D8B0>]
[2024-06-14 23:05:00,201] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377500155}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377500201}]
[2024-06-14 23:05:00,203] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:05:00,203] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377500155, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:05:00,205] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:05:05,296] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:05:05,296] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:05:05,296] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:05:05,359] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:05:05,359] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:05:05,359] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:05:05,359] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:05:05,359] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D670>]
[2024-06-14 23:05:05,359] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377505297}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377505360}]
[2024-06-14 23:05:05,361] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:05:05,361] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377505297, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:05:05,363] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:05:10,471] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:05:10,471] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:05:10,471] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:05:10,517] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:05:10,517] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:05:10,517] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:05:10,517] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:05:10,517] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D5B0>]
[2024-06-14 23:05:10,517] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377510472}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377510518}]
[2024-06-14 23:05:10,519] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:05:10,519] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377510472, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:05:10,522] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
[2024-06-14 23:05:15,609] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 5, channel id is 1
[2024-06-14 23:05:15,609] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 5, channel id is 1.0, gas original value is 1000
[2024-06-14 23:05:15,609] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  1000.0
[2024-06-14 23:05:15,672] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:222) - process gas value channel address 37, channel id is 2
[2024-06-14 23:05:15,672] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:230) - address is 37, channel id is 2.0, gas original value is 50
[2024-06-14 23:05:15,672] [31188] [INFO] - modbusTest.get_cv_each_addr (modbusTest.py:245) - final gas res =  50.0
[2024-06-14 23:05:15,672] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:333) - max_view_send_list is [10001:1000.0] [10002:50.0]
[2024-06-14 23:05:15,672] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:334) - alarm list is [<__main__.AlarmEvent object at 0x0000018CFC45D310>]
[2024-06-14 23:05:15,672] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:338) - send out ai json is [{'objectId': 10001, 'cv': 1000.0, 'time': 1718377515610}, {'objectId': 10002, 'cv': 50.0, 'time': 1718377515672}]
[2024-06-14 23:05:15,674] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:341) - 
[2024-06-14 23:05:15,674] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:345) - send out alarm json is [{'alarmID': 1, 'alarmName': 'CO高报警', 'objTypeID': 109, 'alarmTypeID': 43, 'time': 1718377515610, 'objectId': 10001, 'alarmSeverity': 2, 'acked': False, 'ackTime': None, 'ackResult': 1, 'cleared': False, 'additionalText': 'CO当前值1000.0, 正常区间为[0,0]', 'address': None, 'alarmSource': None, 'confirmDesc': None, 'longitude': None, 'latitude': None, 'ackUser': None, 'clearedUser': None, 'clearedTime': None}]
[2024-06-14 23:05:15,676] [31188] [INFO] - modbusTest.collect_modbus_data (modbusTest.py:348) - 
